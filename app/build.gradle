apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'idea'
apply plugin: 'com.apollographql.android'
apply plugin: 'com.google.gms.google-services' // It's important for analytics
apply plugin: 'io.fabric'
apply from: 'keystore.gradle'
apply from: '../quality.gradle'
apply from: '../scripts/warp/warp_task.gradle'
apply from: '../scripts/sanity/sanity_task.gradle'

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'

    defaultConfig {
        applicationId "ar.com.wolox.android.cookbook"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0.0"

        setProperty("archivesBaseName", "WoloxApp-$versionName") // Generated APK file name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file('keystore/debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            storeFile release_keystore
            storePassword store_password
            keyAlias key_alias
            keyPassword key_password
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            signingConfig signingConfigs.debug
            testCoverageEnabled = true
        }
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildFeatures {
        dataBinding true
    }

    // Change the "default" to whatever fits. At least one 'dimension' is required by gradle.
    flavorDimensions "default"

    productFlavors {
        stage {
            applicationId defaultConfig.applicationId + ".stage"
            versionName defaultConfig.versionName + "-stage"
            resValue "string", "app_name", "[Stage] Wolmo Android Cookbook"
        }

        production {
            resValue "string", "app_name", "Wolmo Android Cookbook"
        }
    }

    applicationVariants.all { variant ->
        def isDebugging = variant.flavorName == "debug"
        def mercadopagoSandboxKey = project.hasProperty("mercadopago_public_key_sandbox") ?
                mercadopago_public_key_sandbox : ""
        def mercadopagoProductionKey = project.hasProperty("mercadopago_public_key") ?
                mercadopago_public_key : ""
        def mercadopagoPublicKey = isDebugging ? mercadopagoSandboxKey : mercadopagoProductionKey
        variant.buildConfigField "String", "MERCADO_PAGO_PUBLIC_KEY", mercadopagoPublicKey
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

buildscript {
    ext.androidx_core_version = '1.0.1'
    ext.androidx_recycler_version = '1.2.1'
    ext.androidx_material_version = '1.0.0'
    ext.androidx_constraint_version = '1.1.3'
    ext.wolmo_core_version = '4.1.0'
    ext.wolmo_networking_version = '4.0.0'
    ext.dagger_version = '2.22.1'
    ext.leak_canary_version = '1.6.2'
    ext.chuck_version = '1.1.0'
    ext.google_play_services_version = '16.0.1'
    ext.fresco_version = '1.13.0'
    ext.nav_arch_component_version = '2.1.0-alpha02'
    ext.rxjava2_version = '2.2.0'
    ext.rxjava2_android_version = '2.1.0'
    ext.facebook_login_version = '4.39.0'
    ext.espresso_core = '3.1.1'
    ext.test_runner = '1.0.1'
    ext.test_rules = '1.1.0'
    ext.mockito_kotlin_version = '2.1.0'
    ext.android_junit = '1.1.0'
    ext.assertj_core = '3.9.0'
    ext.junit_version = '4.12'
    ext.robolectric_version = '4.2'
    ext.fragment_testing_version = '1.1.0-alpha07'
    ext.koin_version = '2.0.1'
    ext.retrofit_version = '2.6.2'
    ext.coroutines_version = '1.3.2'
    ext.twitter_core = '3.1.1'
    ext.tweet_ui = '3.1.1'
    ext.room_version = '2.1.0-alpha01'
    ext.lyfecycle_version = '2.0.0'
    ext.legacy_version = '1.0.0'
    ext.mp_chart = '3.1.0'
    ext.firebase_version = '17.2.3'
    ext.crashlytics_version = '2.10.1'
    ext.mercadopago_version = '4.40.1'
    ext.lottie_version = '3.4.0'
    ext.biometrics_version = '1.1.0'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Wolmo
    implementation "com.github.Wolox:wolmo-core-android:$wolmo_core_version"
    implementation "com.github.Wolox:wolmo-networking-android:$wolmo_networking_version"

    // Android support libraries
    implementation "androidx.core:core:$androidx_core_version"
    implementation "androidx.recyclerview:recyclerview:$androidx_recycler_version"
    implementation "com.google.android.material:material:$androidx_material_version"

    // Constraint Layout
    implementation "androidx.constraintlayout:constraintlayout:$androidx_constraint_version"

    // Dagger
    implementation "com.google.dagger:dagger:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    kapt "com.google.dagger:dagger-android-processor:$dagger_version"

    // Koin for Android
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-android-scope:$koin_version"

    // Fresco
    implementation "com.facebook.fresco:fresco:$fresco_version"
    implementation "com.facebook.fresco:animated-gif:$fresco_version"

    // Third-party
    implementation "com.squareup.okhttp3:logging-interceptor:3.11.0"
    debugImplementation "com.readystatesoftware.chuck:library:$chuck_version"
    releaseImplementation "com.readystatesoftware.chuck:library-no-op:$chuck_version"
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leak_canary_version"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leak_canary_version"

    // Google Play Services
    implementation "com.google.android.gms:play-services-auth:$google_play_services_version"

    // Navigation Architecture Component
    implementation "androidx.navigation:navigation-fragment:$nav_arch_component_version"
    implementation "androidx.navigation:navigation-ui:$nav_arch_component_version"

    // RxJava
    implementation "io.reactivex.rxjava2:rxjava:$rxjava2_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxjava2_android_version"

    // Facebook Login
    implementation "com.facebook.android:facebook-login:$facebook_login_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"

    // Twitter Login
    implementation "com.twitter.sdk.android:twitter-core:$twitter_core"
    implementation "com.twitter.sdk.android:tweet-ui:$tweet_ui"

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.legacy:legacy-support-v4:$legacy_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lyfecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lyfecycle_version"
    kapt "androidx.room:room-compiler:$room_version"

    // MpChart
    implementation "com.github.PhilJay:MPAndroidChart:v$mp_chart"

    //GraphQL
    implementation 'com.apollographql.apollo:apollo-runtime:1.1.3'
    compileOnly 'org.jetbrains:annotations:13.0'
    testCompileOnly 'org.jetbrains:annotations:13.0'
    implementation 'javax.annotation:jsr250-api:1.0'

    // Analytics
    implementation "com.google.firebase:firebase-core:$firebase_version"
    implementation "com.google.firebase:firebase-analytics:$firebase_version"

    //Crashlytics
    implementation "com.crashlytics.sdk.android:crashlytics:$crashlytics_version"

    //Mercadopago
    implementation "com.mercadopago.android.px:checkout:$mercadopago_version"

    //Lottie
    implementation "com.airbnb.android:lottie:$lottie_version"

    // Biometrics
    implementation "androidx.biometric:biometric:$biometrics_version"

    implementation "androidx.recyclerview:recyclerview:1.2.1"
}

dependencies {
    // Unit testing dependencies
    testImplementation "junit:junit:$junit_version"
    testImplementation "org.robolectric:robolectric:$robolectric_version"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockito_kotlin_version"
    testImplementation "org.assertj:assertj-core:$assertj_core"
    testImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$leak_canary_version"
    testImplementation "org.koin:koin-test:$koin_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"
}

dependencies {
    // Instrumented testing dependencies
    androidTestImplementation "androidx.test.ext:junit:$android_junit"
    androidTestImplementation "androidx.test:rules:$test_rules"
    androidTestImplementation "androidx.test:runner:$test_runner"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espresso_core"
    androidTestImplementation "org.assertj:assertj-core:$assertj_core"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_testing_version"
}